{"version":3,"file":"src_app_pages_dashboard_dashboard_module_ts.js","mappings":"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","sources":["./src/app/core/biz.operation.service.ts","./src/app/pages/dashboard/dashboard.component.ts","./src/app/pages/dashboard/dashboard.module.ts","./src/app/pages/dashboard/dashboard.services.ts","./src/app/pages/dashboard/dashboard.component.html"],"sourcesContent":["import { Observable, of } from 'rxjs';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { BizOperationInterface } from './biz.operation.interface';\n\nexport abstract class BizOperationService<T, ID> implements BizOperationInterface<T, ID> {\n\n    constructor(\n        protected httpClient: HttpClient,\n        protected baseUri: string\n    ) { }\n\n    save(t: T) {\n        try {\n            return this.httpClient.post<T>(this.baseUri, t);\n        } catch (error) {\n            return of(null)\n        }\n    }\n\n    delete(id: ID) {\n        try {\n            return this.httpClient.delete<T>(this.baseUri + '/' + id);\n        } catch (error) {\n            return of(null)\n        }\n    }\n\n    \n    update(id: ID, t: T) {\n        try {\n            return this.httpClient.put<T>(this.baseUri + \"/\" + id, t);\n        } catch (error) {\n            return of(null)\n        }\n    }\n\n    updateNoID(t: T){\n        try {\n            return this.httpClient.put<T>(this.baseUri , t);\n        } catch (error) {\n            return of(null)\n        }\n    }\n\n    findOne(id: ID ) {\n        try {\n            return this.httpClient.get<T>(this.baseUri + \"/\" + id);\n        } catch (error) {\n            return of(null)\n        }\n    }\n\n    findAll() {\n        try {\n            return this.httpClient.get<T[]>(this.baseUri)\n        } catch (error) {\n            return of(null)\n        }\n    }\n\n    findAllWithQuery(query: string = \"\") {\n        try {\n            return this.httpClient.get<T[]>(this.baseUri + \"?\" + query)\n        } catch (error) {\n            return of(null)\n        }\n    }\n}\n","import { ChangeDetectorRef, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { forkJoin, Subscription } from 'rxjs';\r\nimport { ProductsService } from '../../_metronic/core/services/products.service';\r\n// import { uuid } from 'uuid';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { v4 } from 'uuid';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { COLTYPE, TableCol } from '../../_metronic/shared/crud-table/components/material-table-view/table-dto';\r\nimport { MaterialTableViewComponent } from '../../_metronic/shared/crud-table/components/material-table-view/material-table-view.component';\r\nimport { DashboardService } from './dashboard.services';\r\n\r\nexport interface FromObj {\r\n  id: string\r\n  name: string\r\n}\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit, OnDestroy {\r\n  @ViewChild(MaterialTableViewComponent) matTable: MaterialTableViewComponent\r\n  constructor(private router: Router,private modalService: NgbModal, private cdRef: ChangeDetectorRef,private dashboardService:DashboardService) { }\r\n\r\n  ngOnInit(): void {\r\n   this.getAll()\r\n  }\r\n  getAll(){\r\n    this.dashboardService.getALl().toPromise().then((res)=>{\r\n      console.log(\"USER==>\",res);\r\n      \r\n    })\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { DashboardComponent } from './dashboard.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { InlineSVGModule } from 'ng-inline-svg';\r\nimport { CRUDTableModule } from '../../_metronic/shared/crud-table';\r\n\r\n@NgModule({\r\n  declarations: [DashboardComponent],\r\n  imports: [\r\n    CommonModule,\r\n    InlineSVGModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    CRUDTableModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: '',\r\n        component: DashboardComponent,\r\n      },\r\n    ]),\r\n  ],\r\n})\r\nexport class DashboardModule { }\r\n\r\n\r\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { BizOperationService } from \"src/app/core/biz.operation.service\";\nimport { environment } from \"src/environments/environment\";\n\nconst API_DASHBOARD = `${environment.apiUrl}/users`;\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class DashboardService extends BizOperationService<any, number>{\n    constructor(protected httpClient: HttpClient) {\n        super(httpClient, API_DASHBOARD);\n    }\n    getALl() {\n        return this.httpClient.get(API_DASHBOARD)\n    }\n}","export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col-12\\\">\\n    <div class=\\\"card card-custom\\\">\\n    \\n      <div class=\\\"card-body customer-card-body\\\">\\n        \\n      </div>\\n    </div>\\n  </div>\\n</div>\";"],"names":[],"sourceRoot":"webpack:///"}