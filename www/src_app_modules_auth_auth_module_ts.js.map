{"version":3,"file":"src_app_modules_auth_auth_module_ts.js","mappings":"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","sources":["./src/app/modules/auth/auth-routing.module.ts","./src/app/modules/auth/auth.component.ts","./src/app/modules/auth/auth.module.ts","./src/app/modules/auth/forgot-password/forgot-password.component.ts","./src/app/modules/auth/login/login.component.ts","./src/app/modules/auth/logout/logout.component.ts","./src/app/modules/auth/auth.component.html","./src/app/modules/auth/forgot-password/forgot-password.component.html","./src/app/modules/auth/login/login.component.html","./src/app/modules/auth/logout/logout.component.html"],"sourcesContent":["import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {AuthComponent} from './auth.component';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {ForgotPasswordComponent} from './forgot-password/forgot-password.component';\r\nimport {LogoutComponent} from './logout/logout.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AuthComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'login',\r\n        pathMatch: 'full'\r\n      },\r\n      {\r\n        path: 'login',\r\n        component: LoginComponent,\r\n        data: {returnUrl: window.location.pathname}\r\n      },\r\n      {\r\n        path: 'forgot-password',\r\n        component: ForgotPasswordComponent\r\n      },\r\n      {\r\n        path: 'logout',\r\n        component: LogoutComponent\r\n      },\r\n      {path: '', redirectTo: 'login', pathMatch: 'full'},\r\n      {path: '**', redirectTo: 'login', pathMatch: 'full'},\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [ RouterModule.forChild(routes) ],\r\n  exports: [ RouterModule ]\r\n})\r\nexport class AuthRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-auth',\r\n  templateUrl: './auth.component.html',\r\n  styleUrls: ['./auth.component.scss']\r\n})\r\nexport class AuthComponent implements OnInit {\r\n\r\n  today: Date = new Date();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\r\nimport { LogoutComponent } from './logout/logout.component';\r\nimport { AuthComponent } from './auth.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent,\r\n    ForgotPasswordComponent,\r\n    LogoutComponent,\r\n    AuthComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AuthRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n  ]\r\n})\r\nexport class AuthModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { first } from 'rxjs/operators';\r\n\r\nenum ErrorStates {\r\n  NotSubmitted,\r\n  HasError,\r\n  NoError,\r\n}\r\n\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.component.html',\r\n  styleUrls: ['./forgot-password.component.scss'],\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n  forgotPasswordForm: FormGroup;\r\n  errorState: ErrorStates = ErrorStates.NotSubmitted;\r\n  errorStates = ErrorStates;\r\n  isLoading$: Observable<boolean>;\r\n\r\n  // private fields\r\n  private unsubscribe: Subscription[] = []; // Read more: => https://brianflove.com/2016/12/11/anguar-2-unsubscribe-observables/\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private authService: AuthService\r\n  ) {\r\n    this.isLoading$ = this.authService.isLoading$;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initForm();\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() {\r\n    return this.forgotPasswordForm.controls;\r\n  }\r\n\r\n  initForm() {\r\n    this.forgotPasswordForm = this.fb.group({\r\n      email: [\r\n        'admin@demo.com',\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.email,\r\n          Validators.minLength(3),\r\n          Validators.maxLength(320), // https://stackoverflow.com/questions/386294/what-is-the-maximum-length-of-a-valid-email-address\r\n        ]),\r\n      ],\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    this.errorState = ErrorStates.NotSubmitted;\r\n    const forgotPasswordSubscr = this.authService\r\n      .forgotPassword(this.f.email.value)\r\n      .pipe(first())\r\n      .subscribe((result: boolean) => {\r\n        this.errorState = result ? ErrorStates.NoError : ErrorStates.HasError;\r\n      });\r\n    this.unsubscribe.push(forgotPasswordSubscr);\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy, ChangeDetectorRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Subscription, Observable } from 'rxjs';\r\nimport { first } from 'rxjs/operators';\r\nimport { UserModel } from '../_models/user.model';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DatabaseService } from 'src/app/_metronic/shared/crud-table/services/database.service';\r\nimport { AlertController } from '@ionic/angular';\r\nimport { UserProfileService } from '../_services/user-profile.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n  // KeenThemes mock, change it to:\r\n  // defaultAuth = {\r\n  //   email: '',\r\n  //   password: '',\r\n  // };\r\n  defaultAuth: any = {\r\n    userName: '',\r\n    userPassword: '',\r\n  };\r\n  loginForm: FormGroup;\r\n  hasError: boolean;\r\n  returnUrl: string;\r\n  isLoading$: Observable<boolean>;\r\n  public showPassword: boolean;\r\n  public showoldPassword: boolean;\r\n  // private fields\r\n  private unsubscribe: Subscription[] = []; // Read more: => https://brianflove.com/2016/12/11/anguar-2-unsubscribe-observables/\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private authService: AuthService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private database: DatabaseService,\r\n    private alertCtrl: AlertController,\r\n    private userService: UserProfileService\r\n  ) {\r\n    this.isLoading$ = this.authService.isLoading$;\r\n    // redirect to home if already logged in\r\n    if (this.authService.currentUserValue) {\r\n      this.router.navigate(['/']);\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initForm();\r\n    // get return url from route parameters or default to '/'\r\n    this.returnUrl =\r\n      this.route.snapshot.queryParams['returnUrl'.toString()] || '/';\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() {\r\n    return this.loginForm.controls;\r\n  }\r\n\r\n  initForm() {\r\n    this.loginForm = this.fb.group({\r\n      userName: [\r\n        this.defaultAuth.userName,\r\n        Validators.compose([\r\n          Validators.required,\r\n          // Validators.email,\r\n          Validators.minLength(3),\r\n          Validators.maxLength(320), // https://stackoverflow.com/questions/386294/what-is-the-maximum-length-of-a-valid-email-address\r\n        ]),\r\n      ],\r\n      userPassword: [\r\n        this.defaultAuth.userPassword,\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.minLength(3),\r\n          Validators.maxLength(100),\r\n        ]),\r\n      ],\r\n    });\r\n  }\r\n\r\n  async submit() {\r\n    // this.hasError = false;\r\n    // const loginSubscr = this.authService\r\n    //   .login(this.f.userName.value, this.f.userPassword.value)\r\n    //   .pipe(first())\r\n    //   .subscribe((user: UserModel) => {\r\n    //     if (user) {\r\n          this.router.navigate(['/dashboard']);\r\n    //     } else {\r\n    //       this.hasError = true;\r\n    //     }\r\n    //   });\r\n    // this.unsubscribe.push(loginSubscr);\r\n    // this.database.checkUserExist(this.loginForm.value).then(async (res) => {\r\n    //   console.log(res);\r\n    //   if (res) {\r\n    //     if (res.userId != null) {\r\n    //       this.userService.userInfo = res\r\n    //       this.database.update('LOGIN_USER', res)\r\n    //       this.router.navigate(['/dashboard']);\r\n    //     }\r\n    //   } else {\r\n    //     let alert = await this.alertCtrl.create({\r\n    //       header: 'Warning',\r\n    //       message: 'User Name Or Password Incorrect',\r\n    //       buttons: [\r\n    //         { role: \"cancel\", text: \"Cancel\" },\r\n    //         { role: \"ok\", text: \"OK\" },\r\n    //       ],\r\n    //       backdropDismiss: false,\r\n    //       cssClass: \"my-customer-alert\",\r\n    //     });\r\n    //     await alert.present();\r\n    //     alert.onDidDismiss().then((res) => {\r\n    //       if (res.role == \"ok\") {\r\n    //       }\r\n    //     });\r\n    //   }\r\n    // })\r\n\r\n  }\r\n  checkUser() {\r\n\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.unsubscribe.forEach((sb) => sb.unsubscribe());\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../_services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-logout',\r\n  templateUrl: './logout.component.html',\r\n  styleUrls: ['./logout.component.scss'],\r\n})\r\nexport class LogoutComponent implements OnInit {\r\n  constructor(private authService: AuthService) {\r\n    this.authService.logout();\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","export default \"<!-- <div class=\\\"d-flex flex-column flex-root h-100\\\" id=\\\"kt_login_wrapper\\\">\\r\\n    \\r\\n    <div class=\\\"login login-1 login-signin-on d-flex flex-column flex-lg-row flex-column-fluid bg-white\\\" id=\\\"kt_login\\\" style=\\\"background-color: #0d0e19 !important;background-size: cover;background-position: bottom;\\\">\\r\\n       \\r\\n        <div class=\\\"login-content flex-row-fluid d-flex flex-column justify-content-center position-relative overflow-hidden p-7 mx-auto\\\">\\r\\n           \\r\\n            <div class=\\\"d-flex flex-column-fluid flex-center\\\">\\r\\n                <router-outlet></router-outlet>\\r\\n            </div>\\r\\n           \\r\\n        </div>\\r\\n      \\r\\n    </div>\\r\\n  \\r\\n</div> -->\\r\\n\\r\\n<div class=\\\"d-flex flex-root h-100\\\" id=\\\"kt_login_wrapper\\\">\\r\\n    <!-- <div class=\\\"p-6 flex-fill\\\" style=\\\"background-color: black; width: 12%;\\\">\\r\\n        <div class=\\\"col-sm-12 text-center\\\" style=\\\"margin-top: 50%;\\\">\\r\\n            <img src=\\\"assets/LOGO1.png\\\" style=\\\"width: 35%;\\\"/><br>\\r\\n          \\r\\n        </div>\\r\\n        <div class=\\\"col-12 pt-5 pb-5\\\">\\r\\n            <h5 class=\\\"font-weight-bolder text-white text-center\\\" style=\\\"font-size: 1.4rem; font-weight: bold;\\\">\\r\\n                GALAXY MYANMAR\\r\\n            </h5>\\r\\n    \\r\\n        </div>\\r\\n    </div> -->\\r\\n    <div class=\\\"p-12 flex-fill\\\"  style=\\\"background: rgb(11,11,11);\\r\\n    background: linear-gradient(165deg, rgba(11,11,11,0.6153054971988796) 35%, rgba(221,175,2,0.5844931722689075) 61%, rgba(254,201,1,0.7777704831932774) 96%); background-size: cover;background-position: bottom;\\\">\\r\\n        <div class=\\\"login login-1 login-signin-on d-flex flex-column flex-lg-row flex-column-fluid\\\" id=\\\"kt_login\\\" >\\r\\n       \\r\\n            <div class=\\\"login-content flex-row-fluid d-flex flex-column justify-content-center position-relative overflow-hidden p-7 mx-auto\\\">\\r\\n               \\r\\n                <div class=\\\"d-flex flex-column-fluid flex-center\\\" style=\\\"margin-top: 12%;\\\">\\r\\n                    <router-outlet></router-outlet>\\r\\n                </div>\\r\\n               \\r\\n            </div>\\r\\n          \\r\\n        </div>\\r\\n    </div>\\r\\n  </div>\";","export default \"<div class=\\\"login-form login-forgot\\\">\\r\\n  <!--begin::Form-->\\r\\n  <form\\r\\n    class=\\\"form fv-plugins-bootstrap fv-plugins-framework\\\"\\r\\n    novalidate=\\\"novalidate\\\"\\r\\n    [formGroup]=\\\"forgotPasswordForm\\\"\\r\\n    (ngSubmit)=\\\"submit()\\\"\\r\\n    id=\\\"kt_login_forgot_form\\\"\\r\\n    [ngStyle]=\\\"{\\r\\n      display: errorState === errorStates.NoError ? 'none' : 'block'\\r\\n    }\\\"\\r\\n  >\\r\\n    <!--begin::Title-->\\r\\n    <div class=\\\"pb-13 pt-lg-0 pt-5\\\">\\r\\n      <h3 class=\\\"font-weight-bolder text-dark font-size-h4 font-size-h1-lg\\\">\\r\\n        Forgotten Password ?\\r\\n      </h3>\\r\\n      <p class=\\\"text-muted font-weight-bold font-size-h4\\\">\\r\\n        Enter your email to reset your password\\r\\n      </p>\\r\\n    </div>\\r\\n    <!--end::Title-->\\r\\n\\r\\n    <!-- begin::Alert error-->\\r\\n    <ng-container *ngIf=\\\"errorState === errorStates.HasError\\\">\\r\\n      <div\\r\\n        class=\\\"mb-10 alert alert-custom alert-light-danger alert-dismissible\\\"\\r\\n      >\\r\\n        <div class=\\\"alert-text\\\">The email detail is incorrect</div>\\r\\n      </div>\\r\\n    </ng-container>\\r\\n    <!-- end::Alert error-->\\r\\n\\r\\n    <!--begin::Form group-->\\r\\n    <div class=\\\"form-group fv-plugins-icon-container has-danger\\\">\\r\\n      <input\\r\\n        class=\\\"form-control form-control-sm h-auto py-7 px-6 rounded-lg font-size-h6\\\"\\r\\n        type=\\\"email\\\"\\r\\n        formControlName=\\\"email\\\"\\r\\n        placeholder=\\\"Email\\\"\\r\\n        name=\\\"email\\\"\\r\\n        autocomplete=\\\"off\\\"\\r\\n        [ngClass]=\\\"{\\r\\n          'is-invalid': forgotPasswordForm.controls['email'].invalid\\r\\n        }\\\"\\r\\n      />\\r\\n\\r\\n      <ng-container\\r\\n        [ngTemplateOutlet]=\\\"formError\\\"\\r\\n        [ngTemplateOutletContext]=\\\"{\\r\\n          validation: 'required',\\r\\n          message: 'Email is required',\\r\\n          control: forgotPasswordForm.controls['email']\\r\\n        }\\\"\\r\\n      ></ng-container>\\r\\n      <ng-container\\r\\n        [ngTemplateOutlet]=\\\"formError\\\"\\r\\n        [ngTemplateOutletContext]=\\\"{\\r\\n          validation: 'email',\\r\\n          message: 'Email is invalid',\\r\\n          control: forgotPasswordForm.controls['email']\\r\\n        }\\\"\\r\\n      ></ng-container>\\r\\n      <ng-container\\r\\n        [ngTemplateOutlet]=\\\"formError\\\"\\r\\n        [ngTemplateOutletContext]=\\\"{\\r\\n          validation: 'minLength',\\r\\n          message: 'Email should have at least 3 symbols',\\r\\n          control: forgotPasswordForm.controls['email']\\r\\n        }\\\"\\r\\n      ></ng-container>\\r\\n      <ng-container\\r\\n        [ngTemplateOutlet]=\\\"formError\\\"\\r\\n        [ngTemplateOutletContext]=\\\"{\\r\\n          validation: 'maxLength',\\r\\n          message: 'Email should have maximum 360 symbols',\\r\\n          control: forgotPasswordForm.controls['email']\\r\\n        }\\\"\\r\\n      ></ng-container>\\r\\n    </div>\\r\\n    <!--end::Form group-->\\r\\n    <!--begin::Form group-->\\r\\n    <div class=\\\"form-group d-flex flex-wrap pb-lg-0\\\">\\r\\n      <button\\r\\n        type=\\\"submit\\\"\\r\\n        id=\\\"kt_login_forgot_submit\\\"\\r\\n        class=\\\"btn btn-primary font-weight-bolder font-size-h6 px-8 py-4 my-3 mr-4\\\"\\r\\n      >\\r\\n        Submit\\r\\n      </button>\\r\\n      <a\\r\\n        routerLink=\\\"/auth/login\\\"\\r\\n        id=\\\"kt_login_forgot_cancel\\\"\\r\\n        class=\\\"btn btn-light-primary font-weight-bolder font-size-h6 px-8 py-4 my-3\\\"\\r\\n      >\\r\\n        Cancel\\r\\n      </a>\\r\\n\\r\\n      <ng-container *ngIf=\\\"isLoading$ | async\\\">\\r\\n        <span class=\\\"spinner spinner-primary ml-5\\\"></span>\\r\\n      </ng-container>\\r\\n    </div>\\r\\n    <!--end::Form group-->\\r\\n    <div></div>\\r\\n  </form>\\r\\n  <!--end::Form-->\\r\\n\\r\\n  <ng-container *ngIf=\\\"errorState === errorStates.NoError\\\">\\r\\n    <div\\r\\n      class=\\\"card card-custom bgi-no-repeat gutter-b\\\"\\r\\n      style=\\\"\\r\\n        height: 175px;\\r\\n        background-color: #4ab58e;\\r\\n        background-position: calc(100% + 1rem) bottom;\\r\\n        background-size: 25% auto;\\r\\n        background-image: url(assets/media/svg/humans/custom-1.svg);\\r\\n      \\\"\\r\\n    >\\r\\n      <!--begin::Body-->\\r\\n      <div class=\\\"card-body d-flex align-items-center\\\">\\r\\n        <div class=\\\"py-2\\\">\\r\\n          <h3 class=\\\"text-white font-weight-bolder mb-3\\\">Email is correct!</h3>\\r\\n          <p class=\\\"text-white font-size-lg\\\">\\r\\n            Message with 'recovery' instruction<br />\\r\\n            has been sent<br />\\r\\n          </p>\\r\\n          <a\\r\\n            routerLink=\\\"/auth/login\\\"\\r\\n            class=\\\"swal2-confirm btn font-weight-bold btn-light-primary\\\"\\r\\n          >\\r\\n            Ok, got it!\\r\\n          </a>\\r\\n        </div>\\r\\n      </div>\\r\\n      <!--end::Body-->\\r\\n    </div>\\r\\n  </ng-container>\\r\\n</div>\\r\\n\\r\\n<ng-template\\r\\n  #formError\\r\\n  let-control=\\\"control\\\"\\r\\n  let-message=\\\"message\\\"\\r\\n  let-validation=\\\"validation\\\"\\r\\n>\\r\\n  <ng-container\\r\\n    *ngIf=\\\"control.hasError(validation) && (control.dirty || control.touched)\\\"\\r\\n  >\\r\\n    <div class=\\\"fv-plugins-message-container\\\">\\r\\n      <div class=\\\"fv-help-block\\\">\\r\\n        {{ message }}\\r\\n      </div>\\r\\n    </div>\\r\\n  </ng-container>\\r\\n</ng-template>\\r\\n\";","export default \"<!--begin::Signin-->\\n\\n<div class=\\\"row\\\">\\n\\n    <div class=\\\"col-sm-12 text-center\\\">\\n        <img src=\\\"assets/LOGO1.png\\\" style=\\\"width: 45%;\\\" /><br>\\n\\n    </div>\\n    <div class=\\\"col-12 pt-5 pb-5\\\">\\n        <h5 class=\\\"font-weight-bolder text-black text-center\\\" style=\\\"font-size: 1.3rem; font-weight: bold;\\\">\\n            Welcome To GALAXY MYANMAR\\n        </h5>\\n\\n    </div>\\n    <!--begin::Form-->\\n    <div class=\\\"card card-custom-orange\\\" style=\\\"width: 100%;opacity: 0.8;\\\">\\n        <div class=\\\"card-body\\\">\\n            <form class=\\\"form\\\" [formGroup]=\\\"loginForm\\\" novalidate=\\\"novalidate\\\" id=\\\"kt_login_signin_form\\\"\\n                (ngSubmit)=\\\"submit()\\\">\\n\\n                <!--begin::Title-->\\n\\n                <!--begin::Form group-->\\n                <div class=\\\"form-group\\\">\\n                    <!-- <input placeholder=\\\"User ID\\\" class=\\\"form-control form-control-sm h-3 py-7 px-6 rounded-lg\\\" type=\\\"text\\\"\\n                        name=\\\"username\\\" formControlName=\\\"userName\\\" autocomplete=\\\"new-password\\\"\\n                        [ngClass]=\\\"{ 'is-invalid': loginForm.controls['userName'].invalid }\\\" /> -->\\n                    <div class=\\\"input-icons\\\">\\n                        <!-- <i class=\\\"flaticon-avatar\\\"></i> -->\\n                        <input placeholder=\\\"User ID\\\" class=\\\"input-field form-control h-3 py-7 px-11 rounded-lg\\\"\\n                            type=\\\"text\\\" name=\\\"username\\\" formControlName=\\\"userName\\\" autocomplete=\\\"new-password\\\"\\n                            [ngClass]=\\\"{ 'is-invalid': loginForm.controls['userName'].invalid }\\\" />\\n                    </div>\\n                </div>\\n                <!--end::Form group-->\\n\\n                <!--begin::Form group-->\\n                <div class=\\\"form-group inner-addon\\\">\\n\\n                    <div class=\\\"input-icons\\\">\\n                        <!-- <i class=\\\"flaticon-lock\\\"></i>                      -->\\n                        <div *ngIf=\\\"loginForm.controls.userPassword.valid\\\">\\n                            <i alt=\\\"show\\\" class=\\\"fas fa-eye eye-show eye\\\" (click)=\\\"showPassword = !showPassword\\\"\\n                                [class.hide]=\\\"showPassword\\\"></i>\\n                            <i alt=\\\"hide\\\" class=\\\"fas fa-eye-slash eye-hide eye\\\" eye\\n                                (click)=\\\"showPassword = !showPassword\\\" [class.hide]=\\\"!showPassword\\\"></i>\\n                        </div>\\n                        <input placeholder=\\\"Password\\\" class=\\\"input-field form-control h-3 py-7 px-6 rounded-lg\\\"\\n                            [type]=\\\"showPassword ? 'text' : 'password'\\\" id=\\\"password-field\\\" name=\\\"userPassword\\\"\\n                            autocomplete=\\\"new-password\\\" formControlName=\\\"userPassword\\\"\\n                            [ngClass]=\\\"{ 'is-invalid': loginForm.controls['userPassword'].invalid }\\\" />\\n                    </div>\\n                </div>\\n            \\n                <!--end::Form group-->\\n                <div class=\\\"font-weight-bolder text-center\\\">\\n                    <a routerLink=\\\"/auth/forgot-userPassword\\\"\\n                        class=\\\"text-new text-center font-weight-bolder text-hover-new \\\">\\n                        Forgot Password ?\\n                    </a>\\n                </div>\\n                <!--begin::Action-->\\n                <div class=\\\"pb-lg-10\\\">\\n                    <button style=\\\"width: 100%;\\\" type=\\\"submit\\\" id=\\\"kt_login_signin_submit\\\"\\n                        class=\\\"btn btn-new text-white font-weight-bolder font-size-h6 px-8 py-4 my-3 mr-3\\\">\\n                        SIGN IN\\n                    </button>\\n                </div>\\n                <!--end::Action-->\\n            </form>\\n        </div>\\n    </div>\\n    <!--end::Form-->\\n</div>\\n<!--end::Signin-->\\n\";","export default \"<p>logout works!</p>\\r\\n\";"],"names":[],"sourceRoot":"webpack:///"}